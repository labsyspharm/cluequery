[{"path":"https://labsyspharm.github.io/cluequery/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Clemens Hug Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://labsyspharm.github.io/cluequery/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Clemens Hug. Author, maintainer.","code":""},{"path":"https://labsyspharm.github.io/cluequery/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hug C (2022). cluequery: Query Clue Database Perturbations Using R. R package version 0.3.3, https://labsyspharm.github.io/cluequery/.","code":"@Manual{,   title = {cluequery: Query the Clue Database of Perturbations Using R},   author = {Clemens Hug},   year = {2022},   note = {R package version 0.3.3},   url = {https://labsyspharm.github.io/cluequery/}, }"},{"path":"https://labsyspharm.github.io/cluequery/index.html","id":"cluer","dir":"","previous_headings":"","what":"Query the Clue Database of Perturbations Using R","title":"Query the Clue Database of Perturbations Using R","text":"goal clueR provide easy R interface query Connectivity Map data Clue.","code":""},{"path":"https://labsyspharm.github.io/cluequery/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Query the Clue Database of Perturbations Using R","text":"can install current version clueR Github :","code":"if (!requireNamespace(\"remotes\", quietly = TRUE))   install.packages(\"remotes\") remotes::install_github(\"labsyspharm/clueR\")"},{"path":"https://labsyspharm.github.io/cluequery/index.html","id":"api-key","dir":"","previous_headings":"","what":"API key","title":"Query the Clue Database of Perturbations Using R","text":"order use package API key Clue required. academice purposes, freely available Clue. API key can automatically retrieved clueR functions added ~/.Renviron file:","code":"CLUE_API_KEY=xxx"},{"path":"https://labsyspharm.github.io/cluequery/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Query the Clue Database of Perturbations Using R","text":"basic example query Clue gene signature interest. Gene signatures can come source, must contain set upregulated genes set downregulated genes. gene signatures must converted GMT format use Clue.","code":""},{"path":"https://labsyspharm.github.io/cluequery/index.html","id":"gene-signature-derived-from-differential-expression-with-deseq2","dir":"","previous_headings":"Example","what":"Gene signature derived from differential expression with DESeq2","title":"Query the Clue Database of Perturbations Using R","text":"example, generate gene set compatible Clue DESeq2 differential expression experiment. First, load example DESeq2 result: Note gene IDs need Entrez IDs. need choose name gene set decide significance cutoff (alpha) differentially expressed genes. number warnings raised, indicating gene IDs part BING gene space. genes removed gene sets considered Clue. clue_prepare_deseq2 returns named vector paths GMT files - -regulated genes.","code":"library(clueR) deseq2_res_path <- system.file(\"extdata\", \"example_deseq2_result.csv.xz\", package = \"clueR\") deseq2_res <- read.csv(deseq2_res_path) head(deseq2_res) #>    baseMean log2FoldChange     lfcSE     pvalue      padj gene_id #> 1 4.3724771    0.738529493 0.6278196 0.01665139 0.1310497       1 #> 2 0.2845104   -0.048028976 0.3494750 0.55657836        NA       2 #> 3 5.4377290   -0.004095729 0.2902083 0.97906352 0.9971952    8086 #> 4 7.9978254    0.498179500 0.3916543 0.03767202 0.2267155   65985 #> 5 3.7455513   -0.167951135 0.3488111 0.29332608 0.6829520   79719 #> 6 6.6533538   -0.264704759 0.3473422 0.18680678 0.5510845   22848 deseq2_gmt <- clue_gmt_from_deseq2(deseq2_res, name = \"treatment_drug_x\", alpha = 0.05) #> Warning: Coercing gene_id to `character`. #> Warning: Of 477 genes, 70 are not in BING space #> Warning: In gene set treatment_drug_x of 477 genes, 70 are not BING genes. #> Excluding them from analysis. 407 genes left. #> Warning: In gene set treatment_drug_x, 264 are in the up-regulated list. #> Maximum is 150. Only keeping the first 150 str(deseq2_gmt) #>  Named chr [1:2] \"/var/folders/_h/wpz1qzm12t5687lbdm87lsh00000gp/T//RtmpbwGbaz/file65a41ca924d.gmt\" ... #>  - attr(*, \"names\")= chr [1:2] \"down\" \"up\""},{"path":"https://labsyspharm.github.io/cluequery/index.html","id":"gene-signature-derived-from-pre-existing-lists","dir":"","previous_headings":"Example","what":"Gene signature derived from pre-existing lists","title":"Query the Clue Database of Perturbations Using R","text":"can also convert pre-existing set genes source GMT files:","code":"up_genes <- c(   \"10365\", \"1831\", \"9314\", \"4846\", \"678\", \"22992\", \"3397\", \"26136\",    \"79637\", \"5551\", \"7056\", \"79888\", \"1032\", \"51278\", \"64866\", \"29775\",    \"994\", \"51696\", \"81839\", \"23580\", \"219654\", \"57178\", \"7014\",    \"57513\", \"51599\", \"55818\", \"4005\", \"4130\", \"4851\", \"2050\", \"50650\",    \"9469\", \"54438\", \"3628\", \"54922\", \"3691\", \"65981\", \"54820\", \"2261\",    \"2591\", \"7133\", \"162427\", \"10912\", \"8581\", \"2523\", \"25807\", \"9922\",    \"30850\", \"4862\", \"8567\", \"79686\", \"55615\", \"51283\", \"3337\", \"2887\",    \"3223\", \"6915\", \"6907\", \"26056\", \"259217\", \"6574\", \"23097\", \"5164\",    \"57493\", \"7071\", \"5450\", \"113146\", \"8650\" ) down_genes <- c(   \"5128\", \"5046\", \"956\", \"10426\", \"9188\", \"23403\", \"7204\", \"1827\",    \"3491\", \"9076\", \"330\", \"8540\", \"22800\", \"10687\", \"19\", \"63875\",    \"10979\", \"51154\", \"10370\", \"50628\", \"7128\", \"6617\", \"7187\", \"22916\",    \"81034\", \"58516\", \"3096\", \"4794\", \"5202\", \"26511\", \"8767\", \"2355\",    \"22943\", \"1490\", \"133\", \"11010\", \"51025\", \"23160\", \"56902\", \"3981\",    \"5209\", \"6347\", \"5806\", \"7357\", \"9425\", \"3399\", \"6446\", \"64328\",    \"6722\", \"8545\", \"688\", \"861\", \"390\", \"23034\", \"51330\", \"51474\",    \"2633\", \"4609\" )  pre_gmt <- clue_gmt_from_list(up_genes, down_genes, \"my_favourite_genes\") str(pre_gmt) #>  Named chr [1:2] \"/var/folders/_h/wpz1qzm12t5687lbdm87lsh00000gp/T//RtmpbwGbaz/file65a5c31574.gmt\" ... #>  - attr(*, \"names\")= chr [1:2] \"down\" \"up\""},{"path":"https://labsyspharm.github.io/cluequery/index.html","id":"querying-clue","dir":"","previous_headings":"Example","what":"Querying Clue","title":"Query the Clue Database of Perturbations Using R","text":"Now GMT files, can query Clue. use GMT files derived DESeq2 result, also use pre_gmt files generated . clue_query_submit returns nested list containing information submitted job, including job id. Now wait job finish. can use function clue_query_wait pause script results ready. clue_query_wait automatically continue execution script results ready. Now can download parse results:","code":"submission_result <- clue_query_submit(   deseq2_gmt[[\"up\"]], deseq2_gmt[[\"down\"]], name = \"deseq2_query_job\" ) submission_result$result$job_id #> [1] \"5d36096d12e15519133e87fd\" clue_query_wait(submission_result, interval = 60, timeout = 600) #> Job not completed yet, waiting for: 5d36096d12e15519133e87fd #> Job not completed yet, waiting for: 5d36096d12e15519133e87fd #> Job not completed yet, waiting for: 5d36096d12e15519133e87fd #> Job completed: 5d36096d12e15519133e87fd result_path <- clue_query_download(submission_result) result_df <- clue_parse_result(result_path) #> reading /var/folders/_h/wpz1qzm12t5687lbdm87lsh00000gp/T//RtmpbwGbaz/clueR-65a4facb13e/my_analysis.sig_fastgutc_tool.5d36096d12e15519133e87fd/matrices/gutc/ns_pert_summary.gctx #> done"},{"path":"https://labsyspharm.github.io/cluequery/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Query the Clue Database of Perturbations Using R","text":"gratefully acknowledge support NIH Grant 1U54CA225088-01: Systems Pharmacology Therapeutic Adverse Responses Immune Checkpoint Small Molecule Drugs.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_check_bing.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if genes are in BING space — clue_check_bing","title":"Check if genes are in BING space — clue_check_bing","text":"connectivity map contains expression information set genes called Best INFerred Genes (BING), see Connectopedia. function subsets input vector gene ids contain BING genes.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_check_bing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if genes are in BING space — clue_check_bing","text":"","code":"clue_check_bing(genes)"},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_check_bing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if genes are in BING space — clue_check_bing","text":"genes Vector gene IDs","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_check_bing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if genes are in BING space — clue_check_bing","text":"Vector gene IDs subsetted contain BING genes.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_list_jobs.html","id":null,"dir":"Reference","previous_headings":"","what":"List Clue jobs — clue_list_jobs","title":"List Clue jobs — clue_list_jobs","text":"List non-deleted jobs submitted user.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_list_jobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Clue jobs — clue_list_jobs","text":"","code":"clue_list_jobs(api_key = NULL)"},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_list_jobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Clue jobs — clue_list_jobs","text":"api_key Clue API key. Leave empty saved ~/.Renviron","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_list_jobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Clue jobs — clue_list_jobs","text":"Data frame job info Clue.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_parse_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse result folder — clue_parse_result","title":"Parse result folder — clue_parse_result","text":"Clue calculates different scores. Connectopedia gives overview interpretation.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_parse_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse result folder — clue_parse_result","text":"","code":"clue_parse_result(   path,   score_level = c(\"cell\", \"summary\"),   score_type = c(\"ns\", \"tau\"),   result_type = c(\"pert\", \"pcl\") )"},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_parse_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse result folder — clue_parse_result","text":"path Path Clue result gz file extracted folder. score_level Return result cell level (cell) summarized (summary) score_type Return either normalized scores (ns) CMap connectivity scores (tau). See details. result_type Return either perturbagen level information (pert) aggregated perturbagen class level information (pcl).","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_parse_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse result folder — clue_parse_result","text":"tibble tidy format, score single pertubation/gene set combination per row.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_prepare_funs.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare GMT functions — clue_prepare_funs","title":"Prepare GMT functions — clue_prepare_funs","text":"Prepare GMT functions","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_prepare_funs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare GMT functions — clue_prepare_funs","text":"","code":"clue_gmt_from_deseq2(result_df, name, alpha = 0.05)  clue_gmt_from_df(gene_set_df, drop_invalid = FALSE)  clue_gmt_from_list(up, down, name, drop_invalid = FALSE)"},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_prepare_funs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare GMT functions — clue_prepare_funs","text":"result_df Data frame returned results function name Name gene set. alpha Significance cutoff set DESeq2 analysis. gene_set_df Data frame gene sets. See Details format. drop_invalid TRUE, drop invalid gene sets warning. Otherwise error raised. , Vectors - -regulated gene IDs.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_prepare_funs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare GMT functions — clue_prepare_funs","text":"Named vector paths GMT files -regulated -regulated gene sets.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_prepare_funs.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Prepare GMT functions — clue_prepare_funs","text":"clue_gmt_from_deseq2: Prepare DESeq2 result Clue clue_gmt_from_df: Prepare gmt files data frame clue_gmt_from_list: Prepare gmt files list genes","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Clue job results — clue_query_download","title":"Download Clue job results — clue_query_download","text":"Given job ID function download results Clue job compressed tarball given location temprary folder","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Clue job results — clue_query_download","text":"","code":"clue_query_download(clue_query, destination = NULL, api_key = NULL)"},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Clue job results — clue_query_download","text":"clue_query Job ID job parameters returned clue_query_submit destination Path download destination. api_key Clue API key. Leave empty saved ~/.Renviron","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Clue job results — clue_query_download","text":"Path result tarball.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_poll.html","id":null,"dir":"Reference","previous_headings":"","what":"Poll query job status — clue_query_poll","title":"Poll query job status — clue_query_poll","text":"Find status job wait completion.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_poll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poll query job status — clue_query_poll","text":"","code":"clue_query_poll(clue_query, api_key = NULL)  clue_query_status(clue_query, api_key = NULL, from_poll = FALSE)  clue_query_wait(   clue_query,   interval = 60,   timeout = 3600,   quiet = FALSE,   api_key = NULL )"},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_poll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Poll query job status — clue_query_poll","text":"clue_query Job ID job parameters returned clue_query_submit api_key Clue API key. Leave empty saved ~/.Renviron from_poll TRUE, clue_query assumed output clue_query_poll() output. Otherwise assumed job ID. interval Check every x seconds. timeout Abort waiting x seconds. quiet output periodic status updates.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_poll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Poll query job status — clue_query_poll","text":"List status codes Clue.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_poll.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Poll query job status — clue_query_poll","text":"clue_query_status: Get job status clue_query_wait: Wait query completion","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_submit.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit Clue queries — clue_query_submit","title":"Submit Clue queries — clue_query_submit","text":"Submit query gene sets GMT format jobs Clue.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_submit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit Clue queries — clue_query_submit","text":"","code":"clue_query_submit(up_gmt, down_gmt, name = NULL, api_key = NULL)  clue_queries_submit(queries, api_key = NULL, interval = 60)"},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_submit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit Clue queries — clue_query_submit","text":"up_gmt, down_gmt Path GMT files containing lists - -regulated genes. name Name job. api_key Clue API key. Leave empty saved ~/.Renviron. queries Named list lists, slot containing - -regulated GMT files. Job names derived list names. interval Check every x seconds.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_submit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit Clue queries — clue_query_submit","text":"Nested list job parameters returned Clue.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_submit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Submit Clue queries — clue_query_submit","text":"GMT files can generated using clue_prepare_funs functions write_gmt.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_query_submit.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Submit Clue queries — clue_query_submit","text":"clue_queries_submit: Submit multiple queries Clue","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_retrieve_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve API key — clue_retrieve_api_key","title":"Retrieve API key — clue_retrieve_api_key","text":"Retrieve API key","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/clue_retrieve_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve API key — clue_retrieve_api_key","text":"","code":"clue_retrieve_api_key()"},{"path":"https://labsyspharm.github.io/cluequery/reference/gene_space.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene space of CMap data — gene_space","title":"Gene space of CMap data — gene_space","text":"Gene space CMap data","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/gene_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene space of CMap data — gene_space","text":"","code":"gene_space"},{"path":"https://labsyspharm.github.io/cluequery/reference/gene_space.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene space of CMap data — gene_space","text":"data frame 20864 rows 4 variables: entrez_id Entrez gene ID symbo HUGO gene symbol type Gene detected directly (landmark) inferred different level confidence bing Indicator gene part BING space best inferred genes","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/gene_space.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene space of CMap data — gene_space","text":"https://clue.io/command?q=/gene-space","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/op_null_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for NULL — op_null_default","title":"Default value for NULL — op_null_default","text":"See rlang::%||% details.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — pipe","title":"Pipe operator — pipe","text":"See magrittr::%>% details.","code":""},{"path":"https://labsyspharm.github.io/cluequery/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — pipe","text":"","code":"lhs %>% rhs"}]
